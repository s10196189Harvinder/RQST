@model List<Area>;
@{
    Layout = "~/Views/Shared/AdminMenu.cshtml";
}
<!--
CSS doers    
infotitle, itemname, itemamnt are css for the windows that pop up when you click on the circle

infotitle - The request count at the top
itemname - styling for the item name
itemamnt - styling for the item amnt
-->
<style>
    #map {
        height: 500px;
    }

    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }
    .infotitle{
        font-size: 12px;
        font-weight:bold;
        justify-content:center;
    }
    .itemname{
        font-size:11px;
        font-weight: 500;
    }
    .itemamnt{
        font-size:11px;
    }
</style>
<link href="~/css/tableDesign.css" rel="stylesheet" />
<link href="~/css/adminpage.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<h2>Admin page</h2>
<div id="map">

</div>

@{
    List<items> Titemlist = new List<items>();
    <script>
        var circlelist = [];
    </script>
    foreach (Area area in Model)
    {
        if (area.reqlist.Count != 0)
        {
            int areanum = area.AreaNum;
            double lat = area.Lat;
            double lng = area.Lng;
            double radius = area.Radius;
            foreach (items item in area.itemsList)
            {
                items itemF = Titemlist.Find(x => x.Name == item.Name);
                if (itemF == null)
                {
                    items nItem = new items(item.Name, item.Requested, item.Icon, item.Remaining, item.BgCol);
                    Titemlist.Add(nItem);
                }
                else
                {
                    itemF.Requested += item.Requested;
                }
            }
            string words = "<div class='infotitle'>Total Requests: "+@area.reqlist.Count()+"</div></br>Item summary</br>";
            foreach (UserRequests requests in area.reqlist)
            {
                @foreach (items item in requests.itemlist)
                {
                    words += "<span class='itemname'>" + item.Name + "</span> : <span class='itemamnt'>" + item.Requested + "</span></br>";
                }
            }
            <script>
                var main = "@Html.Raw(words)"
                circlelist.push({ lat:@lat, lng:@lng, radius:@radius, content: main, amnt:@area.reqlist.Count()})
            </script>
        }
    }
    <button class="open-button" onclick="openForm()">Show Deliverables</button>
    <script src="~/js/tempdeliverables.js"></script>
    <div class="form-popup" id="myForm">
        <div class="main">
            <div class="tableDesign">
                <form class="form-container">
                    <table id="viewInfo" class="table">
                        <thead>
                            <tr style="text-align: center">
                                <th>Item name</th>
                                <th>Total requested Amount</th>
                                <th>Total Remaining</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (items item in Titemlist)
                            {
                                <tr class='table-primary' style="text-align: center">
                                    <td>@item.Name</td>
                                    <td>@item.Requested</td>
                                    <td>@item.Remaining</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <button type="button" class="btn cancel" onclick="closeForm()">Close</button>
                </form>
            </div>
        </div>
    </div>
}

<script>
    function addMarker(coords) {
        var marker = new google.maps.Marker({
            position: coords.coords,
            map: map
        })
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA3QoucpamS6ylPkzBSJBXmbt5ZH7Np6Jk&callback=initMap">
</script>
<script>
    circlelist.push({ lat:1.409982, lng:103.877239, radius:1940.36, content: "Demonstration of region with high requests", amnt:12})
    function hslToHex(h, s, l) {
        l /= 100;
        const a = s * Math.min(l, 1 - l) / 100;
        const f = n => {
            const k = (n + h / 30) % 12;
            const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);
            return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix "0" if needed
        };
        return `#${f(0)}${f(8)}${f(4)}`;
    }
    let map;
    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: 1.3562033, lng: 103.8281415 },
            zoom: 11,
        })
        for (i = 0; i < circlelist.length; i++) {
            var amnt;
            if (circlelist[i].amnt > 10) {
                amnt = 10;
            }
            else {
                amnt = circlelist[i].amnt
            }
            var h = (1 - (amnt / 10)) * 240;        // Gets amount as a scale from 0-1 (where 1 would be requests >=10). Then multiply by 240. (For a 'h' value in heatmap hsl)
            var hex = hslToHex(h, 100, 50);
            var circle = new google.maps.Circle({
                strokeColor: "#000000",
                strokeOpacity: 0.8,
                fillColor: hex,
                fillOpacity: 0.35,
                map,
                center: new google.maps.LatLng(circlelist[i].lat, circlelist[i].lng),
                radius: circlelist[i].radius,
                title : circlelist[i].content,
            });
            var infowindow = new google.maps.InfoWindow();
            google.maps.event.addListener(circle, 'click', function (e) {
                infowindow.setContent(this.title);
                infowindow.setPosition(this.getCenter());
                infowindow.open(map);
            })
        }
    }
</script>
